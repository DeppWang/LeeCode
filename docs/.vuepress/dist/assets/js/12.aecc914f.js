(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{212:function(t,e,r){"use strict";r.r(e);var o=r(0),l=Object(o.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("p",[t._v("LeetCode 题库地址：https://leetcode-cn.com/problemset/all/")]),t._v(" "),r("h2",{attrs:{id:"目录"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#目录","aria-hidden":"true"}},[t._v("#")]),t._v(" 目录")]),t._v(" "),r("ul",[r("li",[r("router-link",{attrs:{to:"/1. two-sum.html"}},[t._v("画解算法：1. 两数之和")]),t._v("：使用哈希表的 contains() 来比较其他元素是否符合条件。标签："),r("code",[t._v("哈希表")])],1),t._v(" "),r("li",[r("router-link",{attrs:{to:"/2. add-two-numbers.html"}},[t._v("画解算法：2. 两数相加")]),t._v("：使用一个假节点来链接链表。标签："),r("code",[t._v("链表")])],1),t._v(" "),r("li",[r("router-link",{attrs:{to:"/3. long-substring-without-repeating-character.html"}},[t._v("画解算法：3. 无重复字符的最长子串")]),t._v("：滑动找到所有不重复的子字符串，如果长度最长，记录为最长字符串。标签："),r("code",[t._v("字符串")]),t._v("、"),r("code",[t._v("Sliding Window")])],1),t._v(" "),r("li",[r("router-link",{attrs:{to:"/5. longest-palindromic-substring.html"}},[t._v("画解算法：5. 最长回文子串")]),t._v("：先将字符串反转，两者比较，利用动态规划得到最长公共子串。再排除字符串首尾是反向副本的情况（"),r("code",[t._v("aacdcaa")]),t._v("）。标签："),r("code",[t._v("字符串")]),t._v("、"),r("code",[t._v("动态规划")])],1),t._v(" "),r("li",[r("router-link",{attrs:{to:"/7. reverse-integer.html"}},[t._v("画解算法：7. 整数反转")]),t._v("：依次除 10 取余，考虑溢出。标签："),r("code",[t._v("数学")])],1),t._v(" "),r("li",[r("router-link",{attrs:{to:"/9. palindrome-number.html"}},[t._v("画解算法：9. 回文数")]),t._v("：依次比较最高位和最低位是否相等。标签："),r("code",[t._v("数学")])],1),t._v(" "),r("li",[r("router-link",{attrs:{to:"/94. binary-tree-inoder-traversal.html"}},[t._v("画解算法：94. 二叉树的中序遍历")]),t._v("：左跟右，如果没有左子树，记录其值。标签："),r("code",[t._v("递归")]),t._v("、"),r("code",[t._v("栈")])],1)])])}),[],!1,null,null,null);e.default=l.exports}}]);